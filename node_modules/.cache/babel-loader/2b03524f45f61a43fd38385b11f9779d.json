{"ast":null,"code":"import _classCallCheck from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/roshansingh/Documents/React/reactnd-contacts-app/src/ImageInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar readFileAsDataURL = function readFileAsDataURL(file) {\n  return new Promise(function (resolve) {\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      resolve(event.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nvar resizeImage = function resizeImage(imageURL, canvas, maxHeight) {\n  return new Promise(function (resolve) {\n    var image = new Image();\n\n    image.onload = function () {\n      var context = canvas.getContext('2d');\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height;\n        image.height = maxHeight;\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0, image.width, image.height);\n      resolve(canvas.toDataURL('image/jpeg'));\n    };\n\n    image.src = imageURL;\n  });\n};\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\n\n\nvar ImageInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageInput, _React$Component);\n\n  function ImageInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: ''\n    };\n\n    _this.handleFileChange = function (event) {\n      var file = event.target.files[0];\n\n      if (file && file.type.match(/^image\\//)) {\n        readFileAsDataURL(file).then(function (originalURL) {\n          resizeImage(originalURL, _this.canvas, _this.props.maxHeight).then(function (url) {\n            _this.setState({\n              value: url\n            });\n          });\n        });\n      } else {\n        _this.setState({\n          value: ''\n        });\n      }\n    };\n\n    _this.handleFormReset = function () {\n      _this.setState({\n        value: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.canvas = document.createElement('canvas');\n      this.fileInput.form.addEventListener('reset', this.handleFormReset);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.fileInput.form.removeEventListener('reset', this.handleFormReset);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          name = _this$props.name;\n      var value = this.state.value;\n      var style = {\n        position: 'relative'\n      };\n\n      if (value) {\n        style.backgroundImage = \"url(\\\"\".concat(value, \"\\\")\");\n        style.backgroundRepeat = 'no-repeat';\n        style.backgroundPosition = 'center';\n        style.backgroundSize = 'cover';\n      }\n\n      return React.createElement(\"div\", {\n        className: className,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"hidden\",\n        name: name,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        ref: function ref(node) {\n          return _this2.fileInput = node;\n        },\n        type: \"file\",\n        onChange: this.handleFileChange,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          opacity: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageInput;\n}(React.Component);\n\nImageInput.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string,\n  maxHeight: PropTypes.number\n};\nexport default ImageInput;","map":{"version":3,"sources":["/Users/roshansingh/Documents/React/reactnd-contacts-app/src/ImageInput.js"],"names":["React","PropTypes","readFileAsDataURL","file","Promise","resolve","reader","FileReader","onload","event","target","result","readAsDataURL","resizeImage","imageURL","canvas","maxHeight","image","Image","context","getContext","height","width","clearRect","drawImage","toDataURL","src","ImageInput","state","value","handleFileChange","files","type","match","then","originalURL","props","url","setState","handleFormReset","document","createElement","fileInput","form","addEventListener","removeEventListener","className","name","style","position","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","node","top","left","opacity","Component","propTypes","string","number"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst readFileAsDataURL = (file) =>\n  new Promise(resolve => {\n    const reader = new FileReader()\n\n    reader.onload = (event) => {\n      resolve(event.target.result)\n    }\n\n    reader.readAsDataURL(file)\n  })\n\nconst resizeImage = (imageURL, canvas, maxHeight) =>\n  new Promise(resolve => {\n    const image = new Image()\n\n    image.onload = () => {\n      const context = canvas.getContext('2d')\n\n      if (image.height > maxHeight) {\n        image.width *= maxHeight / image.height\n        image.height = maxHeight\n      }\n\n      context.clearRect(0, 0, canvas.width, canvas.height)\n      canvas.width = image.width\n      canvas.height = image.height\n\n      context.drawImage(image, 0, 0, image.width, image.height)\n\n      resolve(canvas.toDataURL('image/jpeg'))\n    }\n\n    image.src = imageURL\n  })\n\n/**\n * A custom <input> that dynamically reads and resizes image files before\n * submitting them to the server as data URLs. Also, shows a preview of the image.\n */\nclass ImageInput extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    name: PropTypes.string,\n    maxHeight: PropTypes.number\n  }\n\n  state = {\n    value: ''\n  }\n\n  handleFileChange = (event) => {\n    const file = event.target.files[0]\n\n    if (file && file.type.match(/^image\\//)) {\n      readFileAsDataURL(file).then(originalURL => {\n        resizeImage(originalURL, this.canvas, this.props.maxHeight).then(url => {\n          this.setState({ value: url })\n        })\n      })\n    } else {\n      this.setState({ value: '' })\n    }\n  }\n\n  handleFormReset = () => {\n    this.setState({ value: '' })\n  }\n\n  componentDidMount() {\n    this.canvas = document.createElement('canvas')\n    this.fileInput.form.addEventListener('reset', this.handleFormReset)\n  }\n\n  componentWillUnmount() {\n    this.fileInput.form.removeEventListener('reset', this.handleFormReset)\n  }\n\n  render() {\n    const { className, name } = this.props\n    const { value } = this.state\n\n    const style = {\n      position: 'relative'\n    }\n\n    if (value) {\n      style.backgroundImage = `url(\"${value}\")`\n      style.backgroundRepeat = 'no-repeat'\n      style.backgroundPosition = 'center'\n      style.backgroundSize = 'cover'\n    }\n\n    return (\n      <div className={className} style={style}>\n        <input type=\"hidden\" name={name} value={value} />\n        <input\n          ref={node => this.fileInput = node}\n          type=\"file\"\n          onChange={this.handleFileChange}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            opacity: 0\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ImageInput"]},"metadata":{},"sourceType":"module"}