{"ast":null,"code":"import _classCallCheck from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/roshansingh/Documents/React/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/roshansingh/Documents/React/reactnd-contacts-app/src/ListContacts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar ListContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContacts, _Component);\n\n  function ListContacts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListContacts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListContacts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(ListContacts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var query = this.state.query;\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          onDeleteContact = _this$props.onDeleteContact;\n      var showingContacts = query === '' ? contacts : contacts.filter(function (c) {\n        return c.name.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"list-contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-contacts-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-contacts\",\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/create\",\n        className: \"add-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Add Contact\")), showingContacts.length !== contacts.length && React.createElement(\"div\", {\n        className: \"showing-contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Now showing \", showingContacts.length, \" of \", contacts.length), React.createElement(\"button\", {\n        onClick: this.clearQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Show all\")), React.createElement(\"ol\", {\n        className: \"contact-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, showingContacts.map(function (contact) {\n        return React.createElement(\"li\", {\n          key: contact.id,\n          className: \"contact-list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-avatar\",\n          style: {\n            backgroundImage: \"url(\".concat(contact.avatarURL, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"contact-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, contact.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, contact.handle)), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return onDeleteContact(contact);\n          },\n          className: \"contact-remove\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Remove\"));\n      })));\n    }\n  }]);\n\n  return ListContacts;\n}(Component);\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default ListContacts;","map":{"version":3,"sources":["/Users/roshansingh/Documents/React/reactnd-contacts-app/src/ListContacts.js"],"names":["React","Component","PropTypes","Link","ListContacts","state","query","updateQuery","setState","trim","clearQuery","props","contacts","onDeleteContact","showingContacts","filter","c","name","toLowerCase","includes","event","target","value","length","map","contact","id","backgroundImage","avatarURL","handle","propTypes","array","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nclass ListContacts extends Component {\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  }\n  state = {\n    query: ''\n  }\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query.trim()\n    }))\n  }\n  clearQuery = () => {\n    this.updateQuery('')\n  }\n  render() {\n    const { query } = this.state\n    const { contacts, onDeleteContact } = this.props\n\n    const showingContacts = query === ''\n      ? contacts\n      : contacts.filter((c) => (\n          c.name.toLowerCase().includes(query.toLowerCase())\n        ))\n\n    return (\n      <div className='list-contacts'>\n        <div className='list-contacts-top'>\n          <input\n            className='search-contacts'\n            type='text'\n            placeholder='Search Contacts'\n            value={query}\n            onChange={(event) => this.updateQuery(event.target.value)}\n          />\n          <Link\n            to='/create'\n            className='add-contact'\n          >Add Contact</Link>\n        </div>\n\n        {showingContacts.length !== contacts.length && (\n          <div className='showing-contacts'>\n            <span>Now showing {showingContacts.length} of {contacts.length}</span>\n            <button onClick={this.clearQuery}>Show all</button>\n          </div>\n        )}\n\n        <ol className='contact-list'>\n          {showingContacts.map((contact) => (\n            <li key={contact.id} className='contact-list-item'>\n              <div\n                className='contact-avatar'\n                style={{\n                  backgroundImage: `url(${contact.avatarURL})`\n                }}\n              ></div>\n              <div className='contact-details'>\n                <p>{contact.name}</p>\n                <p>{contact.handle}</p>\n              </div>\n              <button\n                onClick={() => onDeleteContact(contact)}\n                className='contact-remove'>\n                  Remove\n              </button>\n            </li>\n          ))}\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport default ListContacts"]},"metadata":{},"sourceType":"module"}